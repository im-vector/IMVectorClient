plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.google.protobuf' version '0.8.8'
}

group 'com.imvector'
version '1.0.0'
sourceCompatibility = 11

repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}


publishing {

    publications {
        //本地打包
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}


sourceSets {
    gen{
        java{
        }
    }
    main {
        proto {
            // In addition to the default 'src/main/proto'
            srcDir 'src/main/proto'
        }
        java {
            srcDir 'src/main/java'
            //自动生成的代码位置
            srcDir 'gen/main/java'
        }
    }
    test {
        proto {
            // In addition to the default 'src/test/proto'
            srcDir 'src/test/proto'
        }
    }
}

dependencies {

    implementation project(':imvector')

    //IM 通信使用ProtoBuf
    implementation 'com.google.protobuf:protobuf-java:3.7.1'

    compileOnly 'org.springframework.boot:spring-boot-starter-data-redis:2.1.3.RELEASE'

    compileOnly 'io.netty:netty-all:4.1.33.Final'
    compileOnly 'org.springframework.boot:spring-boot-starter:2.1.3.RELEASE'
    testImplementation('org.springframework.boot:spring-boot-starter-test:2.1.3.RELEASE')
}


protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = 'com.google.protobuf:protoc:3.7.1'
    }
    generatedFilesBaseDir = "$projectDir/gen"
}

clean {
    delete protobuf.generatedFilesBaseDir
}

syntax = "proto3";

import "packet.proto";

//只是定义模块名，需要自己再次定义导出包名
package chat;

option java_package = "com.imvector.server.proto.chat";
option java_outer_classname = "Chat";

//客户端发送一条消息
message MsgReq {

    //时序id，根据鉴权返回的sequence，一条消息+1 产生，需要考虑多线程安全问题
    //msgId = fromId << 32 + sequence
    int64 msgId = 1;
    //聊天类型，单例还是群聊呀？
    ChatType chatType = 2;
    //消息类型，发送文字，还是图片呀？
    MessageType msgType = 3;
    //文本内容
    string content = 4;
    //图片、文件路径
    string uri = 5;
    int32 from = 6;
    //发送给谁呀？群Id，用户Id，客服Id
    int32 to = 7;
}

//服务器响应一条消息，告诉客户端，消息收到了
message MsgResp {
    //状态码
    base.Status status = 1;
    //提示信息，成功或者错误信息
    string msg = 2;
    //时序id
    int64 msgId = 3;
}

//服务器转发一条消息给客户端
message MsgOut {

    //时序id
    int64 msgId = 1;
    //聊天类型，单例还是群聊呀？
    ChatType chatType = 2;
    //消息类型，发送文字，还是图片呀？
    MessageType msgType = 3;
    //文本内容
    string content = 4;
    //图片、文件路径
    string uri = 5;
    int32 from = 6;
    //发送给谁呀？群Id，用户Id，客服Id
    int32 to = 7;

}

message ReadReq {

    //读了来自from 的消息了
    int32 from = 1;
    //最后一条消息的Id，相当于早过这条Id 的msg 都读了
    int64 lastMsgId = 2;
}

message ReadResp {

    //状态码
    base.Status status = 1;
    //提示信息，成功或者错误信息
    string msg = 2;
    int32 from = 3;
}

message ReadOut {

    //你发送给to 的信息，已经读了
    string to = 1;
    //最后一条消息的Id，相当于早过这条Id 的msg 都读了
    int64 lastMsgId = 2;

}

//命令Id是二级，但是又独立出来，所以命名 = ServiceId_CommentId
enum CommandId {
    CHAT_MSG = 0;
    CHAT_MSG_OUT = 1;
    CHAT_READ = 2;
    CHAT_READ_OUT = 3;
}

enum MessageType {

    //文本
    TEXT = 0;
    //图片
    IMAGE = 1;
    //文件
    FILE = 2;
    //语音
    AUDIO = 3;
    //视频
    VIDEO = 4;
    //发送个位置
    LOCATION = 5;
    //发送了一个命令，穿透消息
    //结合content 可定制很多操作
    CMD = 6;
}

enum ChatType {

    //单聊
    SINGLE = 0;
    //群聊
    GROUP = 1;
    //聊天室
    ROOM = 2;
    //客服
    HELP_DESK = 3;

}

//消息的状态
enum MsgStatus {

    //消息已经到达了服务器
    MSG_REQ = 0;
    //消息已经到达了to 客户端
    MSG_OUT = 1;
    //消息已经被to 客户端查看了（已读了）
    READ_REQ = 2;
    //已经消息也告诉了from 客户端
    READ_OUT = 3;

}
